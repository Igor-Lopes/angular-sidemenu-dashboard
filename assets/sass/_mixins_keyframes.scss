// Mixins
@mixin desktop {
  @media only screen and (min-width: #{$desktop-width}) {
    @content;
  }
}
@mixin tablet {
  @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width}) {
    @content;
  }
}
@mixin mobile {
  @media only screen and (max-width: #{$mobile-width}) {
    @content;
  }
}
@mixin mobile-xs {
  @media only screen and (max-width: #{$mobile-xs-width}) {
    @content;
  }
}
@mixin cover-background($img-uri, $background-top:"center", $background-left:"center") {
  background: url($img-uri) no-repeat unquote($background-top) unquote($background-left) fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}
@mixin gradient($start,$stop) {
  background: linear-gradient($start, $stop);
  background: -webkit-linear-gradient($start, $stop);
  background: -moz-linear-gradient($start, $stop);
  background: -o-linear-gradient($start, $stop);
}
@mixin image-scale {
  -webkit-transform: scale(1.1);
  -moz-transform: scale(1.1);
  -ms-transform: scale(1.1);
  -o-transform: scale(1.1);
  transform: scale(1.1);
}
@mixin transition {
  -webkit-transition: all ease .5s;
  -moz-transition: all ease .5s;
  -o-transition: all ease .5s;
  transition: all ease .5s;
}
@mixin hover {
  // TODO: re-enable along with mq4-hover-shim
//  @if $enable-hover-media-query {
//    // See Media Queries Level 4: https://drafts.csswg.org/mediaqueries/#hover
//    // Currently shimmed by https://github.com/twbs/mq4-hover-shim
//    @media (hover: hover) {
//      &:hover { @content }
//    }
//  }
//  @else {
    &:hover { @content }
//  }
}
@mixin button-variant($background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  background-color: $background;
  border-color: $border;
  // @include box-shadow($btn-box-shadow);

  // Hover and focus styles are shared
  @include hover {
    background-color: $active-background;
    border-color: $active-border;
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $background;
    border-color: $border;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    background-color: $active-background;
    background-image: none; // Remove the gradient for the pressed/active state
    border-color: $active-border;
    // @include box-shadow($btn-active-box-shadow);
  }
}

@mixin button-outline-variant($color, $color-hover: #fff) {
  color: $color;
  background-image: none;
  background-color: transparent;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 2px rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
}


// Keyframes
@keyframes pop-in {
  0% {
    opacity: 0;
    transform: translateY(-4rem) scale(.8);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}
@keyframes rotate-up {
  100% {
    transform: rotateZ(-4deg);
  }
}
